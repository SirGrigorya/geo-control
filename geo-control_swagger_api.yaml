openapi: 3.0.3
info:
  version: '1'
  title: API http-сервера GeoControl.
tags:
  - name: Auth
    description: Авторизация.
  - name: Parents
    description: Операции над пользователями-родителями.
  - name: Children
    description: Операции над пользователями-детьми.
  - name: Map
    description: Операции, отражаемые на карте.
  - name: Chat
    description: Операции над чатом.

paths: 
  /api/auth:
    post:
      tags:
        - Auth
      summary: Авторизоваться.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequestData'
        description: Авторизационные данные - логин и пароль.
      responses:
        '200':
          description: Авторизация прошла успешно.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponseData'
        '400':
          description: Неверный логин или пароль.
        '500':
          description: Ошибка на стороне сервера.
  
  /api/parents/{login}:
    get:
      tags:
        - Parents
      summary: Получить данные o пользователе-родителе по логину.
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
          description: Авторизационные данные в формате Basic (RFC 7617). Логин и пароль в формате 'Basic <BASE64 представление строки логин:пароль>'. 
          example: 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='
        - name: login
          in: path
          description: Логин пользователя-родителя.
          example: "Anastasia"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Запрос выполнен успешно.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Parent"
        "401":
          description: Неверные авторизационные данные в хедере Authorization, либо их отсутствие.
        "500":
          description: Внутренняя ошибка сервера.

components:
  schemas:
    AuthRequestData:
      description: Данные для авторизации.
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
          example: "Anastasia"
          description: Пользовательский логин. Он же является идентификатором пользователя.
        password:
          type: string
          example: "Qwerty123"
          description: Пользовательский пароль.
    AuthResponseData:
      description: Ответ на успешную авторизацию.
      type: object
      required:
        - userType
      properties:
        userType:
          type: string
          enum:
            - PARENT
            - CHILD
          example: PARENT
          description: Тип данного пользователя - родитель или ребенок.
    Parent:
      description: Пользователь-родитель.
      type: object
      required:
        - login
        - password
        - children
      properties:
        login:
          type: string
          example: "Anastasia"
          description: Пользовательский логин. Он же является идентификатором пользователя.
        password:
          type: string
          example: "Qwerty123"
          description: Пользовательский пароль.
